{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","characterData","map","row","index","name","job","onClick","removeCharacter","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","characters","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"wNAEMA,EAAc,WAClB,OACE,gCACE,+BACE,sCACA,qCACA,8CAMFC,EAAY,SAACC,GACjB,IAAMC,EAAOD,EAAME,cAAcC,KAAI,SAACC,EAAKC,GACzC,OACE,+BACE,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACE,wBAAQC,QAAS,kBAAMR,EAAMS,gBAAgBJ,IAA7C,wBAJKA,MAUb,OACE,gCAAQJ,KAeGS,EAXD,SAACV,GACb,IAAOE,EAAkCF,EAAlCE,cAAeO,EAAmBT,EAAnBS,gBAEtB,OACE,kCACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,cAAeA,EAAeO,gBAAiBA,Q,OCpC1DE,E,4MAEJC,aAAe,CACbN,KAAM,GACNC,IAAK,I,EAgBPM,MAAQ,EAAKD,a,EAabE,aAAe,SAACC,GACd,MAAwBA,EAAMC,OAAtBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MAEd,EAAKC,SAAL,eACGZ,EAAOW,K,EAIZE,WAAa,WACX,EAAKnB,MAAMoB,aAAa,EAAKP,OAI7B,EAAKK,SAAS,EAAKN,e,4CASrB,WACE,MAAsBS,KAAKR,MAAnBP,EAAR,EAAQA,KAAMC,EAAd,EAAcA,IAEd,OACE,iCACE,uBAAOe,QAAQ,OAAf,kBACA,uBACEC,KAAK,OACLC,GAAG,OACHlB,KAAK,OACLW,MAAOX,EACPmB,SAAUJ,KAAKP,eAEjB,uBAAOQ,QAAQ,MAAf,iBACA,uBACEC,KAAK,OACLC,GAAG,MACHlB,KAAK,MACLW,MAAOV,EACPkB,SAAUJ,KAAKP,eAEjB,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GA5EvCO,aAkFJf,IC/ETgB,E,4MACJd,MAAQ,CACNe,WAAY,I,EAGdnB,gBAAkB,SAACJ,GACjB,IAAOuB,EAAc,EAAKf,MAAnBe,WAEP,EAAKV,SAAS,CACZU,WAAYA,EAAWC,QAAO,SAACC,EAAWC,GAExC,OAAOA,IAAM1B,Q,EAKnBe,aAAe,SAACU,GACd,EAAKZ,SAAS,CACZU,WAAW,GAAD,mBAAM,EAAKf,MAAMe,YAAjB,CAA6BE,O,4CAI3C,WACE,IAAOF,EAAcP,KAAKR,MAAnBe,WAEP,OACE,sBAAKI,UAAU,YAAf,UACE,cAAC,EAAD,CAAO9B,cAAe0B,EAAYnB,gBAAiBY,KAAKZ,kBACxD,cAAC,EAAD,CAAMW,aAAcC,KAAKD,sB,GA5BfM,aAkCHC,I,MClCfM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c344a4d5.chunk.js","sourcesContent":["import React from 'react'\n\nconst TableHeader = () => {\n  return (\n    <thead>\n      <tr>\n        <th>Name</th>\n        <th>Job</th>\n        <th>Remove</th>\n      </tr>\n    </thead>\n  )\n}\n\nconst TableBody = (props) => {\n  const rows = props.characterData.map((row, index) => {\n    return (\n      <tr key={index}>\n        <td>{row.name}</td>\n        <td>{row.job}</td>\n        <td>\n          <button onClick={() => props.removeCharacter(index)}>Delete</button>\n        </td>\n      </tr>\n    )\n  })\n\n  return (\n    <tbody>{rows}</tbody>\n  )\n}\n\nconst Table = (props) => {\n  const {characterData, removeCharacter} = props\n\n  return (\n    <table>\n      <TableHeader />\n      <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n    </table>\n  )\n}\n\nexport default Table","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  // 第一种写法\n  initialState = {\n    name: \"\",\n    job: \"\",\n  };\n\n  // 第二种写法\n  // state = {\n  //   name: \"\",\n  //   job: \"\",\n  // }\n\n  // 第三种写法\n  // state = {\n  //   name: \"\",\n  //   job: \"\",\n  // };\n\n  // 第一种写法,适用于处理state为空并利用state的name和job的值清空输入框\n  state = this.initialState;\n\n  // 第二种写法，适用于处理state为空并利用state的name和job的值清空输入框\n  // temporaryState = this.state\n\n  // 第三种写法,适用于当默认state不为空且input输入框要清空的情况\n  // cleanInput = () => {\n  //   this.setState({\n  //     name: \"\",\n  //     job: \"\",\n  //   });\n  // };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  submitForm = () => {\n    this.props.handleSubmit(this.state);\n    // console.log(this.state)\n\n    // 第一种写法\n    this.setState(this.initialState)\n\n    // 第二种写法\n    // this.setState(this.temporaryState)\n\n    // 第三种写法\n    // this.cleanInput();\n  };\n\n  render() {\n    const { name, job } = this.state;\n\n    return (\n      <form>\n        <label htmlFor=\"name\">Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          name=\"name\"\n          value={name}\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"job\">Job</label>\n        <input\n          type=\"text\"\n          id=\"job\"\n          name=\"job\"\n          value={job}\n          onChange={this.handleChange}\n        />\n        <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, {Component} from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\n\nclass App extends Component {\n  state = {\n    characters: [],\n  }\n\n  removeCharacter = (index) => {\n    const {characters} = this.state\n\n    this.setState({\n      characters: characters.filter((character, i) => {\n        // console.log(i, index)\n        return i !== index\n      })\n    })\n  }\n\n  handleSubmit = (character) => {\n    this.setState({\n      characters: [...this.state.characters, character]\n    })\n  }\n\n  render() {\n    const {characters} = this.state\n\n    return (\n      <div className=\"container\">\n        <Table characterData={characters} removeCharacter={this.removeCharacter} />\n        <Form handleSubmit={this.handleSubmit} />\n      </div>\n    )\n  }\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}